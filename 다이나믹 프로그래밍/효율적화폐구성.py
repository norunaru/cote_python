"""
N가지 종류의 화폐가 있다. 이 화폐들의 개수를 최소한으로 이용하여 가치의 합이 M이 되도록 하려고 한다.
예를 들어 2원, 3원 단위의 화폐가 있으면 15원을 만들기 위해 3원을 5개 사용하는 것이 최소이다.
M원을 만들기 위한 최소한의 화폐 개수를 출력하는 프로그램을 작성하라.

첫쨰 줄에 N,M이 주어진다. (1 <= N <= 100, 1 <= M <= 10000)
이후 N개의 줄에 각 화폐의 가치가 주어진다. 화폐의 가치는 10000보다 작거나 같은 자연수이다.
첫째 줄에 최소 화폐 개수를 출력한다.
불가능할 경우 -1을 출력한다.

2 15
2
3
답 : 5

3 4 
3
5
7
답 : -1
"""

n, m = map(int, input())
# n개의 화폐 단위 정보를 입력받기
array = []
for i in range(n):
    array.append(int(input()))

# 한 번 계산된 결과를 저장하기 위한 DP테이블 초기화
# 0~m원까지 각각 금엑애 대한 최소 개수를 구하려고 하므로 * (m+1)
d = [10001] * (m + 1)

# DP 진행 - 바텀업
d[0] = 0

# i 는 화폐 단위, j는 금액을 의미.
# 각각의 화폐 단위를 하나씩 확인하며 그 단위에 대해 모든 금액을 확인하며 각 금액에 대한 최적해를 갱신한다.
for i in range(n):
    # 해당 화폐 단위부터 금액까지
    for j in range(array[i], m + 1):
        # i - k 원을 만드는 방법이 존재하는 경우
        if d[j - array[i]] != 10001:
            d[j] = min(d[j], d[j - array[i]] + 1)

# 결과 출력
if d[m] == 10001:  # m원 만드는 방법이 없는 경우
    print(-1)
else:
    print(d[m])
