"""
모험가 길드 문제
한 마을에 모험가가 N명 존재. 모험가 길드에서는 N명 모험가 대상으로 '공포도'를 측정했는데
'공포도'가 높은 모험가는 쉽게 공포를 느껴 위험 상황에 제대로 대처할 능력이 떨어진다.
모험가 길드장인 홍길동은 모험가 그룹을 안전하게 구성하고자 공포도가 X인 모험가는 반드시 X명 이상으로
구성한 모험가 그룹에 참여해야 여행을 떠날 수 있도록 규정하였다.
홍길동은 최대 몇 개의 모험가 그룹을 만들 수 있는지 궁금합니다. N명의 모험가에 대한 정보가 주어졌을때,
여행을 떠날 수 있는 그룹 수의 최대값을 구하는 프로그램을 작성하라

ex) N = 5, 각 모험가의 공포도가 2 3 1 2 2인 경우
그룹 1에 공포도가 1,2,3인 모험가를 한명씩 넣고, 그룹2에 공포도 2인 남은 두 명을 넣는다.
몇 명의 모험가는 마을에 남아 있어도 되므로 모든 모험가를 그룹에 넣을 필요는 없음.
"""

"""
내 코드
N = int(input())
fear = list(map(int, input().split()))
group_count = 0
fear = sorted(fear)
print(fear)

# 1. 리스트 마지막 값만큼 뺴서 리스트 재할당  / last = fear[len(fear)-1]
# 2. 리스트에서 완전히 제거 pop()
while fear:
    # 정렬한 리스트의 마지막 값(공포도가 가장 높은 숫자)를 얻고, 그 크기만큼 리스트에서 제거하여 그룹 생성.
    last = fear[len(fear) - 1]
    for i in range(last):
        fear.pop()
    group_count += 1
print(group_count)
"""

# 오름차순 정렬 후 공포도가 낮은 모험가부터 확인
# 앞에서부터 공포도를 확인하여 '현재 그룹에 포함된 모험가의 수'가 '현재 확인하고 있는 공포도'보다 크거나 같다면 이를 그룹으로 설정한다.
# 이러한 방법 이용시 공포도가 오름차순 정렬되었으므로 항상 최소한의 모험가 수만 포함하여 그룹 결성한다.
n = int(input())
data = list(map(int, input().split()))
data.sort()

result = 0  # 총 그룹의 수
count = 0  # 현재 그룹에 포함된 모험가의 수

for i in data:  # 공포도를 낮은 것부터 하나씩 확인
    count += 1  # 현재 그룹에 해당 모험가를 포함시키기
    if count >= i:  # 현재 그룹에 포함된 모험가의 수가 현재의 공포도 이상이라면, 그룹 결성
        result += 1  # 총 그룹의 수 증가
        count = 0  # 현재 그룹에 포함된 모험가의 수 초기화

print(result)  # 총 그룹의 수 출력
