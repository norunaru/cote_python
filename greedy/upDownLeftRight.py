"""
여행가 A는 N x N 크기의 정사각형 공간에 서있다. 이 공간은 1*1 코기의 정사각형으로 나뉘어짐
가장 왼쪽 위 좌표는 1,1이고, 가장 오른쪽 아래 좌표는 N,N이다. 
여행가는 상,하,좌,우 방향으로 이동 가능하며 시작 좌표는 항상 1,1이다. 여행가의 이동계획이 적힌 계획서가 놓여있다.
- L : 왼쪽으로 한 칸 이동
- R : 오른쪽으로 한 칸 이동
- U : 위쪽으로 한 칸 이동
- D : 아래로 한 칸 이동

NxN 크기 공간을 벗어나는 움직임은 무시된다. 예를 들어 1,1위치에서 L,U의 이동은 무시됨
"""
# 1,1 이 시작점으로 주어지면 0행,0열을 사용하지 않거나, 1,1을 소스코드에서 0,0으로 처리하는 것처럼 두가지 방법 존재

"""
요구사항대로 충실히 구현하면 되는 문제
일련의 명령에 따라 개체를 차례로 이동시킨다는 점에서 시뮬레이션 유형으로 분류되며, 구현이 중요한 문제 유형.
"""

n = int(input())
x, y = 1, 1
plans = input().split()

# L,R,U,D에 따른 이동
dx = [0, 0, -1, 1]
dy = [-1, 1, 0, 0]
move_types = ["L", "R", "U", "D"]

# 이동 계획을 하나씩 확인
for plan in plans:
    # 이동 후 좌표 구하기
    for i in range(len(move_types)):
        if plan == move_types[i]:
            nx = x + dx[i]
            ny = y + dy[i]
    # 공간을 벗어나는 경우 무시
    if nx < 1 or ny < 1 or nx > n or ny > n:
        continue
    # 이동 수행
    x, y = nx, ny

print(x, y)
